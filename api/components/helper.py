import os

from langchain_core.messages import HumanMessage
from dotenv import load_dotenv

def chat_w_llm(text: str, llm:object, config:dict):
    """
    Sends the input text to a language model and returns the generated response content.

    Args:
        text (str): The input text prompt to send to the language model.
        config (dict): contains session id for the memory portion 

    Returns:
        str: The content of the response generated by the language model.
    """
    input= [HumanMessage(text)]
    response = llm.invoke({"messages": input}, config=config)
    return response['messages'][-1].content


def get_env_variables():
    """
    creates a dictionary with all the env variables within it.
    Loads environment variables from a .env file 
    Raises:
        EnvironmentError: If the "GOOGLE_API_KEY" is not found in the environment variables.
    Returns:
        str: The Google API key.
    """
    # load .env files
    # define google gemini api key
    # raise error is api key not present
    load_dotenv()
    env = {
        "GOOGLE_API_KEY" : os.getenv("GOOGLE_API_KEY"),
        "GEMINI_MODEL" : os.getenv("GEMINI_MODEL")
    }
    if not all(env.values()):
        raise EnvironmentError("Please check your .env file.")
    return env